/*–î–∞–Ω–æ –º–∞—Å–∏–≤, —â–æ –º—ñ—Å—Ç–∏—Ç—å N —Ü—ñ–ª–∏—Ö —á–∏—Å–µ–ª (1 ‚â§ ùëÅ ‚â§ 104). –ó–Ω–∞–π—Ç–∏ —É –Ω—å–æ–º—É –æ—Å—Ç–∞–Ω–Ω—î –ø—Ä–æ—Å—Ç–µ —á–∏—Å–ª–æ.
–ü—Ä–æ—Å—Ç–∏–º –Ω–∞–∑–∏–≤–∞—î—Ç—å—Å—è —á–∏—Å–ª–æ, —â–æ –º–∞—î —Ä—ñ–≤–Ω–æ –¥–≤–∞ –¥—ñ–ª—å–Ω–∏–∫–∏: 1 —Ç–∞ —Å–∞–º–µ —á–∏—Å–ª–æ, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥, 2, 3, 31
—Ç–æ—â–æ.*/


#include <iostream>
#include <bits/stdc++.h>
using namespace std;

void in_mas(int mas[], int N){
    for (int i = 0; i < N; i++){
        cin >> mas[i];
    }
}

bool happy(int N)
{
    int cnt=cnt_digit(N);
    if(cnt%2!=0) return false;
    int pow10=pow(10, cnt/2);
    int left=N/pow10;
    int right=N%pow10;
    if(sum_digit(left)==sum_digit(right)) return true;
    return false;
}


int mas[300000];
int main()
{
    int N, i;
    cin >> N; 
    in_mas(mas, N);
    i = 0;
    while(i<N && (!happy(mas[i]))) i++;
    if (i==N) cout << "-1";
    else cout << mas[i] << ' ' << i+1;
    return 0;
}